#!/usr/bin/python3

import argparse
import click
import pathlib
import yaml
from ros_rocks import download_yamls, get_distro_dicts, get_status, ROS1, get_all_distros


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--download', action='store_true')
    parser.add_argument('-r', '--reparse', action='store_true')
    parser.add_argument('-s', '--statuses', action='store_true')
    args = parser.parse_args()

    folder = pathlib.Path('the_yamls')

    if args.download:
        download_yamls(folder)

    cached_distro_dicts_path = pathlib.Path('distro_dicts.yaml')
    if not cached_distro_dicts_path.exists() or args.reparse:
        distro_dicts = get_distro_dicts(folder)
        yaml.safe_dump(distro_dicts, open(cached_distro_dicts_path, 'w'), default_flow_style=False)
    else:
        distro_dicts = yaml.safe_load(open(cached_distro_dicts_path))

    status_dict = get_status(distro_dicts)
    yaml.safe_dump(status_dict, open('status.yaml', 'w'))

    longest_package_name_length = max(len(pkg) for pkg in status_dict)
    f_s = '{:' + str(longest_package_name_length + 2) + '}'

    distros = get_all_distros(status_dict)

    for pkg in sorted(status_dict):
        click.secho(f_s.format(pkg), nl=False)
        one = True
        for distro in distros:
            if one and distro not in ROS1:
                one = False
                click.secho(' ', nl=False)
            letter = distro[0].upper()
            if distro in status_dict[pkg]['status']:
                info = status_dict[pkg]['status'][distro]
                if info['class'] == 'good':
                    click.secho(letter, nl=False, bg='green')
                else:
                    click.secho(letter, nl=False, bg='red')
            else:
                click.secho(' ', nl=False)

        click.secho('')

        if args.statuses:
            for distro in distros:
                if distro not in status_dict[pkg]:
                    continue
                d = status_dict[pkg][distro]['status']
                click.secho(f'\t{distro:10} {d}', fg='cyan')
