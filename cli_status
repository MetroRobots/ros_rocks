#!/usr/bin/python3

import argparse
import click
from metro_db import MetroDB
import pathlib
import yaml
from ros_rocks import download_yamls, read_distro_dicts, get_package_statuses, ROS1, get_all_distros


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--download', action='store_true')
    parser.add_argument('-s', '--statuses', action='store_true')
    parser.add_argument('-w', '--write', action='store_true')
    args = parser.parse_args()

    folder = pathlib.Path('the_yamls')

    if args.download:
        download_yamls(folder)

    full_status = {}

    with MetroDB('build_status') as db:
        read_distro_dicts(db, folder)

        longest_package_name_length = len(db.lookup('name', 'pkg', 'ORDER BY LENGTH(name) DESC'))
        f_s = '{:' + str(longest_package_name_length + 2) + '}'

        distros = get_all_distros(db)

        for pkg, status_dict in get_package_statuses(db):
            click.secho(f_s.format(pkg), nl=False)
            one = True
            for distro in distros:
                if one and distro not in ROS1:
                    one = False
                    click.secho(' ', nl=False)
                letter = distro[0].upper()
                if distro in status_dict['status']:
                    info = status_dict['status'][distro]
                    if info['class'] == 'good':
                        click.secho(letter, nl=False, bg='green')
                    else:
                        click.secho(letter, nl=False, bg='red')
                else:
                    click.secho(' ', nl=False)

            click.secho('')

            if args.statuses:
                for distro in distros:
                    if distro not in status_dict:
                        continue
                    d = status_dict[distro]['status']
                    click.secho(f'\t{distro:10} {d}', fg='cyan')

            if args.write:
                full_status[pkg] = status_dict

    if args.write:
        yaml.safe_dump(status_dict, open('status.yaml', 'w'))
